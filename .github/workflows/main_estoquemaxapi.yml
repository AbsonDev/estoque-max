# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - EstoqueMaxApi

on:
  push:
    branches:
      - main
    paths:
      - 'EstoqueMax/**'  # Só executa se houver mudanças na API
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Build with dotnet
        run: dotnet build EstoqueMax/EstoqueApp.Api/EstoqueApp.Api.csproj --configuration Release

      - name: dotnet publish
        run: dotnet publish EstoqueMax/EstoqueApp.Api/EstoqueApp.Api.csproj -c Release -o "${{env.DOTNET_ROOT}}/myapp" --self-contained false --verbosity normal

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: windows-latest
    needs: build
    
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Install EF Core tools
        run: dotnet tool install --global dotnet-ef

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_37D515C7C91841FE9771B34B0F590751 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_CF8154EE7D5D4D03BCB3F42B0969CB3D }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_15D0CBA5ECE1467887F7EA3538D69D5D }}

      - name: Configure App Settings
        uses: azure/appservice-settings@v1
        with:
          app-name: 'EstoqueMaxApi'
          app-settings-json: |
            [
              {
                "name": "ConnectionStrings__DefaultConnection",
                "value": "Server=estoquemaxdb.postgres.database.azure.com;Database=postgres;Port=5432;User Id=EstoqueMax;Password=19791953!Abson;Ssl Mode=Require;"
              },
              {
                "name": "Jwt__Key",
                "value": "EstoqueMaxSuperSecretKeyForJwtAuthentication2024!@#$%^&*()_+{}|:<>?[]\\;',./~`1234567890"
              },
              {
                "name": "Jwt__Issuer",
                "value": "EstoqueApp.Api"
              },
              {
                "name": "Jwt__Audience",
                "value": "EstoqueApp.Clientes"
              },
              {
                "name": "Authentication__Google__ClientId",
                "value": "265016365851-63o4nec9jujr8eelujrimjb4667ghobi.apps.googleusercontent.com"
              },
              {
                "name": "Stripe__SecretKey",
                "value": "sk_test_SUA_CHAVE_SECRETA_AQUI"
              },
              {
                "name": "Stripe__PublishableKey",
                "value": "pk_test_SUA_CHAVE_PUBLICA_AQUI"
              },
              {
                "name": "Stripe__WebhookSecret",
                "value": "whsec_SEU_SEGREDO_DE_WEBHOOK_AQUI"
              }
            ]

      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app
          path: ./app

      - name: List artifact contents (debug)
        run: |
          echo "Listing contents of ./app:"
          Get-ChildItem -Path ./app -Force
          echo "Checking for main files:"
          Get-ChildItem -Path ./app -Filter "*.dll" -Force

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'EstoqueMaxApi'
          slot-name: 'Production'
          package: ./app
          restart: true

      - name: Run Database Migrations (after deploy)
        run: |
          cd EstoqueMax/EstoqueApp.Api
          dotnet ef database update --connection "Server=estoquemaxdb.postgres.database.azure.com;Database=postgres;Port=5432;User Id=EstoqueMax;Password=19791953!Abson;Ssl Mode=Require;"
          