// <auto-generated />
using System;
using EstoqueApp.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EstoqueApp.Api.Migrations
{
    [DbContext(typeof(EstoqueContext))]
    [Migration("20250707182501_AdicionarPartilhaFamiliar")]
    partial class AdicionarPartilhaFamiliar
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EstoqueApp.Api.Models.ConviteDespensa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataEnvio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataResposta")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DespensaId")
                        .HasColumnType("integer");

                    b.Property<int>("DestinatarioId")
                        .HasColumnType("integer");

                    b.Property<int>("Estado")
                        .HasColumnType("integer");

                    b.Property<string>("Mensagem")
                        .HasColumnType("text");

                    b.Property<int>("RemetenteId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DestinatarioId");

                    b.HasIndex("RemetenteId");

                    b.HasIndex("DespensaId", "DestinatarioId", "Estado")
                        .IsUnique()
                        .HasFilter("\"Estado\" = 0");

                    b.ToTable("ConvitesDespensa");
                });

            modelBuilder.Entity("EstoqueApp.Api.Models.Despensa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Despensas");
                });

            modelBuilder.Entity("EstoqueApp.Api.Models.EstoqueItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataValidade")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DespensaId")
                        .HasColumnType("integer");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.Property<int>("QuantidadeMinima")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DespensaId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("EstoqueItens");
                });

            modelBuilder.Entity("EstoqueApp.Api.Models.ListaDeComprasItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Comprado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DescricaoManual")
                        .HasColumnType("text");

                    b.Property<int?>("ProdutoId")
                        .HasColumnType("integer");

                    b.Property<int>("QuantidadeDesejada")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ListaDeComprasItens");
                });

            modelBuilder.Entity("EstoqueApp.Api.Models.MembroDespensa", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.Property<int>("DespensaId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataAcesso")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Papel")
                        .HasColumnType("integer");

                    b.HasKey("UsuarioId", "DespensaId");

                    b.HasIndex("DespensaId");

                    b.ToTable("MembrosDespensa");
                });

            modelBuilder.Entity("EstoqueApp.Api.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoBarras")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Marca")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CodigoBarras")
                        .IsUnique();

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("EstoqueApp.Api.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("EstoqueApp.Api.Models.ConviteDespensa", b =>
                {
                    b.HasOne("EstoqueApp.Api.Models.Despensa", "Despensa")
                        .WithMany("Convites")
                        .HasForeignKey("DespensaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EstoqueApp.Api.Models.Usuario", "Destinatario")
                        .WithMany("ConvitesRecebidos")
                        .HasForeignKey("DestinatarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EstoqueApp.Api.Models.Usuario", "Remetente")
                        .WithMany("ConvitesEnviados")
                        .HasForeignKey("RemetenteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Despensa");

                    b.Navigation("Destinatario");

                    b.Navigation("Remetente");
                });

            modelBuilder.Entity("EstoqueApp.Api.Models.EstoqueItem", b =>
                {
                    b.HasOne("EstoqueApp.Api.Models.Despensa", "Despensa")
                        .WithMany("EstoqueItens")
                        .HasForeignKey("DespensaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EstoqueApp.Api.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Despensa");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("EstoqueApp.Api.Models.ListaDeComprasItem", b =>
                {
                    b.HasOne("EstoqueApp.Api.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EstoqueApp.Api.Models.Usuario", "Usuario")
                        .WithMany("ListaDeCompras")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EstoqueApp.Api.Models.MembroDespensa", b =>
                {
                    b.HasOne("EstoqueApp.Api.Models.Despensa", "Despensa")
                        .WithMany("Membros")
                        .HasForeignKey("DespensaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EstoqueApp.Api.Models.Usuario", "Usuario")
                        .WithMany("AcessosDespensa")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Despensa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EstoqueApp.Api.Models.Despensa", b =>
                {
                    b.Navigation("Convites");

                    b.Navigation("EstoqueItens");

                    b.Navigation("Membros");
                });

            modelBuilder.Entity("EstoqueApp.Api.Models.Usuario", b =>
                {
                    b.Navigation("AcessosDespensa");

                    b.Navigation("ConvitesEnviados");

                    b.Navigation("ConvitesRecebidos");

                    b.Navigation("ListaDeCompras");
                });
#pragma warning restore 612, 618
        }
    }
}
